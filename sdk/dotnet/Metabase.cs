// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Metabase
{
    [MetabaseResourceType("metabase:index:Metabase")]
    public partial class Metabase : Pulumi.ComponentResource
    {
        /// <summary>
        /// The DNS name for the Metabase instance.
        /// </summary>
        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        /// <summary>
        /// The security group id for the Metabase instance.
        /// </summary>
        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a Metabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Metabase(string name, MetabaseArgs? args = null, ComponentResourceOptions? options = null)
            : base("metabase:index:Metabase", name, args ?? new MetabaseArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class MetabaseArgs : Pulumi.ResourceArgs
    {
        [Input("domain")]
        public Input<Inputs.CustomDomainArgs>? Domain { get; set; }

        /// <summary>
        /// The version of Metabase to run - used as a tag on the `metabase/metabase` Dockerhub image.
        /// </summary>
        [Input("metabaseVersion")]
        public Input<string>? MetabaseVersion { get; set; }

        [Input("networking")]
        public Input<Inputs.NetworkingArgs>? Networking { get; set; }

        /// <summary>
        /// The VPC to use for the Metabase cluster.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public MetabaseArgs()
        {
        }
    }
}
